plugins {
    id "idea"
    id "fabric-loom" version "0.12-SNAPSHOT"
    id "io.github.juuxel.loom-quiltflower" version "1.7.2"
}


def envVersion = System.getenv("VERSION")
version = envVersion == null ? "0.0.0-indev" : envVersion
archivesBaseName = "${mod_id}-fabric-${minecraft_version}"

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
    }

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"

    implementation project(":Common")
    implementation "org.jetbrains:annotations:23.0.0"
}

loom {
    mixin.defaultRefmapName = "${mod_id}.refmap.json"
    accessWidenerPath = file("src/main/resources/cyanide.accesswidener")

    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}


processResources {
    from project(":Common").sourceSets.main.resources

    filesMatching("fabric.mod.json") {
        expand project.properties
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

jar {
    from("LICENSE") {
        rename { "${it}_${mod_name}" }
    }
}

